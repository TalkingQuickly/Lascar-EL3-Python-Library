import usb.core
import time

LOGGER_VENDOR = 0x10c4
LOGGER_PRODUCT = 0x0002

print "trying to connect to usb Device"
dev = usb.core.find(idVendor=LOGGER_VENDOR, idProduct=LOGGER_PRODUCT)
if dev is None:
    raise ValueError("Logger Not Found")
else :
    print "Found and Connected to Logger"

for cfg in dev:
    print "Configuration: " , str(cfg.bConfigurationValue) + '\n'
    for intf in cfg:
        print "intf.InterfaceNumber:" , str(intf.bInterfaceNumber) , "intf.AlternateSetting:" , str(intf.bAlternateSetting)
        for ep in intf:
            print "Endpoint Address:" , str(ep.bEndpointAddress) 
            

#print "Trying to Set Config (Using First Found)"
dev.set_configuration()
#print "Config Set OK"
#print "Trying to select interface 0 and alternate_setting to 0"
dev.set_interface_altsetting(interface = 0, alternate_setting = 0)
#print "Config Set OK"

#Begin Status
print "CT 9 (0x02 0x02):" , dev.ctrl_transfer(0x40, 0x02, 0x02, 0x00, []) 
print "W10 ()" , dev.write(2, [] , 0 , 100)
print "W11 (00 ff ff)" , dev.write(2, [0x00 , 0xff , 0xff] , 0 , 100)
print "R11 ()" , dev.read(2, 256 , 0 , 100)
print "W12 ()" , dev.write(2, [] , 0 , 100)
print "R12 ()" , dev.read(2, 256 , 0 , 100)
print "W13 ()" , dev.write(2, [] , 0 , 100)
print "CT14 (0x02 0x04):" , dev.ctrl_transfer(0x40, 0x02, 0x04, 0x00, []) 
#End Status

#Bgin Get Reading Count
print "CT 15 (0x02 0x02):" , dev.ctrl_transfer(0x40, 0x02, 0x02, 0x00, []) 
print "W16 (00 ff ff)" , dev.write(2, [0x00 , 0xff , 0xff] , 0 , 100)
print "W17 ()" , dev.write(2, [] , 0 , 100)
print "W18 ()" , dev.write(2, [] , 0 , 100)
print "CT19 (0x02 0x04):" , dev.ctrl_transfer(0x40, 0x02, 0x04, 0x00, []) 
print "CT20 (0x02 0x02):" , dev.ctrl_transfer(0x40, 0x02, 0x02, 0x00, []) 
print "W21 (01 00 01)" , dev.write(2, [0x01 , 0x00 , 0x01] , 0 , 100)
print "W22 (256 bytes)" , dev.write(2 , [0x06 ,0x00 ,0x45 ,0x61 ,0x73 ,0x79 ,0x4c ,0x6f ,0x67 ,0x20 ,0x55 ,0x53 ,0x42 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x11 ,0x32 ,0x25 ,0x10 ,0x0b ,0x09 ,0x00 ,0x00 ,0x00 ,0x00 ,0x01 ,0x00 ,0x50 ,0x02 ,0x00 ,0x02 ,0xf4 ,0xc8 ,0x7e ,0xf9 ,0x1d ,0x38 ,0xf5 ,0xbf ,0xf3 ,0xba ,0x09 ,0x00 ,0x00 ,0x00 ,0x76 ,0x30 ,0x2e ,0x33 ,0xad ,0x3d ,0x00 ,0x00 ,0x58 ,0x28 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x56 ,0x6f ,0x6c ,0x74 ,0x73 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x33 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x33 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x67 ,0xa3 ,0x4e ,0x41 ,0x32 ,0x35 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x35 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x2e ,0x30 ,0x30 ,0x20 ,0x2d ,0x20 ,0x33 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x56 ,0x6f ,0x6c ,0x74 ,0x73 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x56 ,0x6f ,0x6c ,0x74 ,0x73 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x33 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x33 ,0x30 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x32 ,0x35 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x35 ,0x2e ,0x30 ,0x30 ,0x00 ,0x00 ,0x00 ,0x00 ,0x38 ,0x02 ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff ,0xff] , 0, 100)
print "W23 ()" , dev.write(0x82, [] , 0 , 100)
print "CT24 (0x02 0x04):" , dev.ctrl_transfer(0x40, 0x02, 0x04, 0x00, []) 
print "CT25 (0x02 0x02):" , dev.ctrl_transfer(0x40, 0x02, 0x02, 0x00, []) 
print "W26 (00 ff ff)" , dev.write(2, [0x00 , 0xff , 0xff] , 0 , 100)
""
print "W27 ()" , dev.write(0x82, [] , 0 , 1000)
""
print "W28 ()" , dev.write(0x82, [] , 0 , 1000)
""
print "CT29 (0x02 0x04):" , dev.ctrl_transfer(0x40, 0x02, 0x04, 0x00, []) 
#End Get Reading Count
""
#Begin Prepare to Get Data
print "CT30 (0x02 0x02):" , dev.ctrl_transfer(0x40, 0x02, 0x02, 0x00, []) 
""
print "W31 (00 ff ff)" , dev.write(0x82, [0x00 , 0xff , 0xff] , 0 , 100)
""
print "W32 ()" , dev.write(2, [] , 0 , 100)
""
print "W33 ()" , dev.write(2, [] , 0 , 100)
""
print "CT34 (0x02 0x04):" , dev.ctrl_transfer(0x40, 0x02, 0x04, 0x00, []) 
print "CT35 (0x02 0x02):" , dev.ctrl_transfer(0x40, 0x02, 0x02, 0x00, []) 
print "W36 (03 ff ff)" , dev.write(2, [0x03 , 0xff , 0xff] , 0 , 100)
""
print "W37 ()" , dev.write(0x82, [] , 0 , 100)
""
print "W38 ()" , dev.write(0x82, [] , 0 , 100)
""
print "W39 ()" , dev.write(0x82, [] , 0 , 100)
""
print "W40 ()" , dev.write(0x82, [] , 0 , 100)
""
print "W41 ()" , dev.write(0x82, [] , 0 , 100)
""
#End Prepare to Get Data
#Begin Loop through records
end = 0
while end<50:
    outtemp = dev.read(0x02, 512, 0, 100)
    print "Just Read 512 Bytes:" , outtemp
    end = end+1
    
    print "Writing To Endpoint 2 (No Data/ Blank Line)" , dev.write(2, [] , 0 , 100);
#end loop through records
print "Download Compelte"
print "Downloaded Data (raw):" , out
print "CTLAST (0x02 0x04):" , dev.ctrl_transfer(0x40, 0x02, 0x04, 0x00, []) 

